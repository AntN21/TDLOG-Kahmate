# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 pytest coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      
      # Runs black formatter
      - uses: actions/checkout@v2
      - uses: rickstaa/action-black@v1
        with:
          black_args: ". --check"

      # Runs Flake8
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      # Runs coverage report
      - name: Test with pytest
        run: |
          coverage run --source=. -m unittest discover && coverage report

      # Analyze coverage.xml
      - name: Get Cover 
        uses: orgoro/coverage@v3
        with:
            coverageFile: ./coverage.xml
            token: ${{ secrets.GITHUB_TOKEN }}
